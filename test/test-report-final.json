{"numFailedTestSuites":5,"numFailedTests":25,"numPassedTestSuites":4,"numPassedTests":55,"numPendingTestSuites":7,"numPendingTests":56,"numRuntimeErrorTestSuites":3,"numTodoTests":0,"numTotalTestSuites":16,"numTotalTests":136,"openHandles":[],"snapshot":{"added":0,"didUpdate":false,"failure":false,"filesAdded":0,"filesRemoved":0,"filesRemovedList":[],"filesUnmatched":0,"filesUpdated":0,"matched":0,"total":0,"unchecked":0,"uncheckedKeysByFile":[],"unmatched":0,"updated":0},"startTime":1755947545190,"success":false,"testResults":[{"assertionResults":[{"ancestorTitles":["slackListUsersTool","Input Validation"],"duration":22,"failureDetails":[{"matcherResult":{"message":"expect(received).toHaveLength(expected)\n\nExpected length: 1\nReceived length: 0\nReceived array:  []","pass":false}}],"failureMessages":["Error: expect(received).toHaveLength(expected)\n\nExpected length: 1\nReceived length: 0\nReceived array:  []\n    at Object.<anonymous> (/home/ubuntu/mcp-slack-sdk/__tests__/tools/slackListUsers.test.ts:70:28)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)"],"fullName":"slackListUsersTool Input Validation should accept valid input with defaults","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"failed","title":"should accept valid input with defaults"},{"ancestorTitles":["slackListUsersTool","Input Validation"],"duration":103,"failureDetails":[],"failureMessages":[],"fullName":"slackListUsersTool Input Validation should validate limit parameter","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"should validate limit parameter"},{"ancestorTitles":["slackListUsersTool","Input Validation"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"slackListUsersTool Input Validation should validate sort_by parameter","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"should validate sort_by parameter"},{"ancestorTitles":["slackListUsersTool","Input Validation"],"duration":6,"failureDetails":[{"matcherResult":{"message":"expect(received).toContain(expected) // indexOf\n\nExpected substring: \"Validation failed\"\nReceived string:    \"Cannot read properties of undefined (reading 'members')\"","pass":false}}],"failureMessages":["Error: expect(received).toContain(expected) // indexOf\n\nExpected substring: \"Validation failed\"\nReceived string:    \"Cannot read properties of undefined (reading 'members')\"\n    at Object.<anonymous> (/home/ubuntu/mcp-slack-sdk/__tests__/tools/slackListUsers.test.ts:93:28)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)"],"fullName":"slackListUsersTool Input Validation should validate filter_by_status parameter","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"failed","title":"should validate filter_by_status parameter"},{"ancestorTitles":["slackListUsersTool","Input Validation"],"duration":1,"failureDetails":[{"matcherResult":{"message":"expect(received).toContain(expected) // indexOf\n\nExpected substring: \"Validation failed\"\nReceived string:    \"Cannot read properties of undefined (reading 'members')\"","pass":false}}],"failureMessages":["Error: expect(received).toContain(expected) // indexOf\n\nExpected substring: \"Validation failed\"\nReceived string:    \"Cannot read properties of undefined (reading 'members')\"\n    at Object.<anonymous> (/home/ubuntu/mcp-slack-sdk/__tests__/tools/slackListUsers.test.ts:100:28)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)"],"fullName":"slackListUsersTool Input Validation should validate filter_by_role parameter","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"failed","title":"should validate filter_by_role parameter"},{"ancestorTitles":["slackListUsersTool","User Filtering"],"duration":1,"failureDetails":[{"matcherResult":{"message":"expect(received).toHaveLength(expected)\n\nExpected length: 1\nReceived length: 0\nReceived array:  []","pass":false}}],"failureMessages":["Error: expect(received).toHaveLength(expected)\n\nExpected length: 1\nReceived length: 0\nReceived array:  []\n    at Object.<anonymous> (/home/ubuntu/mcp-slack-sdk/__tests__/tools/slackListUsers.test.ts:140:28)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)"],"fullName":"slackListUsersTool User Filtering should filter by account type - regular users only","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"failed","title":"should filter by account type - regular users only"},{"ancestorTitles":["slackListUsersTool","User Filtering"],"duration":1,"failureDetails":[{"matcherResult":{"message":"expect(received).toHaveLength(expected)\n\nExpected length: 1\nReceived length: 0\nReceived array:  []","pass":false}}],"failureMessages":["Error: expect(received).toHaveLength(expected)\n\nExpected length: 1\nReceived length: 0\nReceived array:  []\n    at Object.<anonymous> (/home/ubuntu/mcp-slack-sdk/__tests__/tools/slackListUsers.test.ts:161:28)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)"],"fullName":"slackListUsersTool User Filtering should filter by account type - bots only","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"failed","title":"should filter by account type - bots only"},{"ancestorTitles":["slackListUsersTool","User Filtering"],"duration":1,"failureDetails":[{"matcherResult":{"message":"expect(received).toHaveLength(expected)\n\nExpected length: 1\nReceived length: 0\nReceived array:  []","pass":false}}],"failureMessages":["Error: expect(received).toHaveLength(expected)\n\nExpected length: 1\nReceived length: 0\nReceived array:  []\n    at Object.<anonymous> (/home/ubuntu/mcp-slack-sdk/__tests__/tools/slackListUsers.test.ts:183:28)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)"],"fullName":"slackListUsersTool User Filtering should filter by role - admins only","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"failed","title":"should filter by role - admins only"},{"ancestorTitles":["slackListUsersTool","User Filtering"],"duration":0,"failureDetails":[{"matcherResult":{"message":"expect(received).toHaveLength(expected)\n\nExpected length: 2\nReceived length: 0\nReceived array:  []","pass":false}}],"failureMessages":["Error: expect(received).toHaveLength(expected)\n\nExpected length: 2\nReceived length: 0\nReceived array:  []\n    at Object.<anonymous> (/home/ubuntu/mcp-slack-sdk/__tests__/tools/slackListUsers.test.ts:205:28)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)"],"fullName":"slackListUsersTool User Filtering should filter by name","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"failed","title":"should filter by name"},{"ancestorTitles":["slackListUsersTool","User Filtering"],"duration":0,"failureDetails":[{"matcherResult":{"message":"expect(received).toHaveLength(expected)\n\nExpected length: 1\nReceived length: 0\nReceived array:  []","pass":false}}],"failureMessages":["Error: expect(received).toHaveLength(expected)\n\nExpected length: 1\nReceived length: 0\nReceived array:  []\n    at Object.<anonymous> (/home/ubuntu/mcp-slack-sdk/__tests__/tools/slackListUsers.test.ts:226:28)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)"],"fullName":"slackListUsersTool User Filtering should filter by timezone","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"failed","title":"should filter by timezone"},{"ancestorTitles":["slackListUsersTool","User Filtering"],"duration":1,"failureDetails":[{"matcherResult":{"message":"expect(received).toHaveLength(expected)\n\nExpected length: 1\nReceived length: 0\nReceived array:  []","pass":false}}],"failureMessages":["Error: expect(received).toHaveLength(expected)\n\nExpected length: 1\nReceived length: 0\nReceived array:  []\n    at Object.<anonymous> (/home/ubuntu/mcp-slack-sdk/__tests__/tools/slackListUsers.test.ts:257:28)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)"],"fullName":"slackListUsersTool User Filtering should filter by department","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"failed","title":"should filter by department"},{"ancestorTitles":["slackListUsersTool","User Filtering"],"duration":1,"failureDetails":[{"matcherResult":{"message":"expect(received).toHaveLength(expected)\n\nExpected length: 1\nReceived length: 0\nReceived array:  []","pass":false}}],"failureMessages":["Error: expect(received).toHaveLength(expected)\n\nExpected length: 1\nReceived length: 0\nReceived array:  []\n    at Object.<anonymous> (/home/ubuntu/mcp-slack-sdk/__tests__/tools/slackListUsers.test.ts:277:28)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)"],"fullName":"slackListUsersTool User Filtering should exclude deleted users by default","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"failed","title":"should exclude deleted users by default"},{"ancestorTitles":["slackListUsersTool","User Filtering"],"duration":1,"failureDetails":[{"matcherResult":{"message":"expect(received).toHaveLength(expected)\n\nExpected length: 2\nReceived length: 0\nReceived array:  []","pass":false}}],"failureMessages":["Error: expect(received).toHaveLength(expected)\n\nExpected length: 2\nReceived length: 0\nReceived array:  []\n    at Object.<anonymous> (/home/ubuntu/mcp-slack-sdk/__tests__/tools/slackListUsers.test.ts:298:28)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)"],"fullName":"slackListUsersTool User Filtering should include deleted users when requested","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"failed","title":"should include deleted users when requested"},{"ancestorTitles":["slackListUsersTool","Presence Integration"],"duration":0,"failureDetails":[{}],"failureMessages":["TypeError: Cannot read properties of undefined (reading 'presence')\n    at Object.<anonymous> (/home/ubuntu/mcp-slack-sdk/__tests__/tools/slackListUsers.test.ts:330:30)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)"],"fullName":"slackListUsersTool Presence Integration should include presence data when requested","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"failed","title":"should include presence data when requested"},{"ancestorTitles":["slackListUsersTool","Presence Integration"],"duration":0,"failureDetails":[{}],"failureMessages":["TypeError: Cannot read properties of undefined (reading 'presence')\n    at Object.<anonymous> (/home/ubuntu/mcp-slack-sdk/__tests__/tools/slackListUsers.test.ts:356:30)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)"],"fullName":"slackListUsersTool Presence Integration should handle presence API errors gracefully","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"failed","title":"should handle presence API errors gracefully"},{"ancestorTitles":["slackListUsersTool","Presence Integration"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"slackListUsersTool Presence Integration should skip presence for bots","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"should skip presence for bots"},{"ancestorTitles":["slackListUsersTool","Presence Integration"],"duration":0,"failureDetails":[{"matcherResult":{"message":"expect(received).toHaveLength(expected)\n\nExpected length: 1\nReceived length: 0\nReceived array:  []","pass":false}}],"failureMessages":["Error: expect(received).toHaveLength(expected)\n\nExpected length: 1\nReceived length: 0\nReceived array:  []\n    at Object.<anonymous> (/home/ubuntu/mcp-slack-sdk/__tests__/tools/slackListUsers.test.ts:402:28)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)"],"fullName":"slackListUsersTool Presence Integration should filter by presence status","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"failed","title":"should filter by presence status"},{"ancestorTitles":["slackListUsersTool","Sorting"],"duration":3,"failureDetails":[{"matcherResult":{"actual":[],"expected":["alice","bob","charlie"],"message":"expect(received).toEqual(expected) // deep equality\n\n- Expected  - 5\n+ Received  + 1\n\n- Array [\n-   \"alice\",\n-   \"bob\",\n-   \"charlie\",\n- ]\n+ Array []","name":"toEqual","pass":false}}],"failureMessages":["Error: expect(received).toEqual(expected) // deep equality\n\n- Expected  - 5\n+ Received  + 1\n\n- Array [\n-   \"alice\",\n-   \"bob\",\n-   \"charlie\",\n- ]\n+ Array []\n    at Object.<anonymous> (/home/ubuntu/mcp-slack-sdk/__tests__/tools/slackListUsers.test.ts:443:52)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)"],"fullName":"slackListUsersTool Sorting should sort by name ascending (default)","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"failed","title":"should sort by name ascending (default)"},{"ancestorTitles":["slackListUsersTool","Sorting"],"duration":1,"failureDetails":[{"matcherResult":{"actual":[],"expected":["charlie","bob","alice"],"message":"expect(received).toEqual(expected) // deep equality\n\n- Expected  - 5\n+ Received  + 1\n\n- Array [\n-   \"charlie\",\n-   \"bob\",\n-   \"alice\",\n- ]\n+ Array []","name":"toEqual","pass":false}}],"failureMessages":["Error: expect(received).toEqual(expected) // deep equality\n\n- Expected  - 5\n+ Received  + 1\n\n- Array [\n-   \"charlie\",\n-   \"bob\",\n-   \"alice\",\n- ]\n+ Array []\n    at Object.<anonymous> (/home/ubuntu/mcp-slack-sdk/__tests__/tools/slackListUsers.test.ts:459:52)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)"],"fullName":"slackListUsersTool Sorting should sort by name descending","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"failed","title":"should sort by name descending"},{"ancestorTitles":["slackListUsersTool","Sorting"],"duration":1,"failureDetails":[{"matcherResult":{"actual":[],"expected":["Alice Smith","Bob Johnson","Charlie Brown"],"message":"expect(received).toEqual(expected) // deep equality\n\n- Expected  - 5\n+ Received  + 1\n\n- Array [\n-   \"Alice Smith\",\n-   \"Bob Johnson\",\n-   \"Charlie Brown\",\n- ]\n+ Array []","name":"toEqual","pass":false}}],"failureMessages":["Error: expect(received).toEqual(expected) // deep equality\n\n- Expected  - 5\n+ Received  + 1\n\n- Array [\n-   \"Alice Smith\",\n-   \"Bob Johnson\",\n-   \"Charlie Brown\",\n- ]\n+ Array []\n    at Object.<anonymous> (/home/ubuntu/mcp-slack-sdk/__tests__/tools/slackListUsers.test.ts:474:57)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)"],"fullName":"slackListUsersTool Sorting should sort by real_name","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"failed","title":"should sort by real_name"},{"ancestorTitles":["slackListUsersTool","Sorting"],"duration":2,"failureDetails":[{"matcherResult":{"actual":false,"expected":true,"message":"expect(received).toBe(expected) // Object.is equality\n\nExpected: true\nReceived: false","name":"toBe","pass":false}}],"failureMessages":["Error: expect(received).toBe(expected) // Object.is equality\n\nExpected: true\nReceived: false\n    at Object.<anonymous> (/home/ubuntu/mcp-slack-sdk/__tests__/tools/slackListUsers.test.ts:488:30)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)"],"fullName":"slackListUsersTool Sorting should sort by display_name","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should sort by display_name"},{"ancestorTitles":["slackListUsersTool","Analytics"],"duration":0,"failureDetails":[{}],"failureMessages":["TypeError: Cannot read properties of undefined (reading 'profile_analytics')\n    at Object.<anonymous> (/home/ubuntu/mcp-slack-sdk/__tests__/tools/slackListUsers.test.ts:524:30)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)"],"fullName":"slackListUsersTool Analytics should include profile analytics when requested","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"failed","title":"should include profile analytics when requested"},{"ancestorTitles":["slackListUsersTool","Analytics"],"duration":1,"failureDetails":[{}],"failureMessages":["TypeError: Cannot read properties of undefined (reading 'activity_analytics')\n    at Object.<anonymous> (/home/ubuntu/mcp-slack-sdk/__tests__/tools/slackListUsers.test.ts:555:30)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)"],"fullName":"slackListUsersTool Analytics should include activity analytics when requested","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"failed","title":"should include activity analytics when requested"},{"ancestorTitles":["slackListUsersTool","Analytics"],"duration":1,"failureDetails":[{"matcherResult":{"actual":false,"expected":true,"message":"expect(received).toBe(expected) // Object.is equality\n\nExpected: true\nReceived: false","name":"toBe","pass":false}}],"failureMessages":["Error: expect(received).toBe(expected) // Object.is equality\n\nExpected: true\nReceived: false\n    at Object.<anonymous> (/home/ubuntu/mcp-slack-sdk/__tests__/tools/slackListUsers.test.ts:595:30)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)"],"fullName":"slackListUsersTool Analytics should sort by profile score","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should sort by profile score"},{"ancestorTitles":["slackListUsersTool","Summary Statistics"],"duration":1,"failureDetails":[{"matcherResult":{"actual":0,"expected":3,"message":"expect(received).toBe(expected) // Object.is equality\n\nExpected: 3\nReceived: 0","name":"toBe","pass":false}}],"failureMessages":["Error: expect(received).toBe(expected) // Object.is equality\n\nExpected: 3\nReceived: 0\n    at Object.<anonymous> (/home/ubuntu/mcp-slack-sdk/__tests__/tools/slackListUsers.test.ts:644:42)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)"],"fullName":"slackListUsersTool Summary Statistics should generate comprehensive summary statistics","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"failed","title":"should generate comprehensive summary statistics"},{"ancestorTitles":["slackListUsersTool","Pagination"],"duration":0,"failureDetails":[{"matcherResult":{"actual":0,"expected":2,"message":"expect(received).toBe(expected) // Object.is equality\n\nExpected: 2\nReceived: 0","name":"toBe","pass":false}}],"failureMessages":["Error: expect(received).toBe(expected) // Object.is equality\n\nExpected: 2\nReceived: 0\n    at Object.<anonymous> (/home/ubuntu/mcp-slack-sdk/__tests__/tools/slackListUsers.test.ts:677:48)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)"],"fullName":"slackListUsersTool Pagination should handle pagination correctly","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"status":"failed","title":"should handle pagination correctly"},{"ancestorTitles":["slackListUsersTool","Pagination"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"slackListUsersTool Pagination should pass cursor to API","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should pass cursor to API"},{"ancestorTitles":["slackListUsersTool","Error Handling"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"slackListUsersTool Error Handling should handle API errors gracefully","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"should handle API errors gracefully"},{"ancestorTitles":["slackListUsersTool","Error Handling"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"slackListUsersTool Error Handling should handle missing members in response","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"should handle missing members in response"},{"ancestorTitles":["slackListUsersTool","Metadata"],"duration":0,"failureDetails":[{"matcherResult":{"expected":"active","message":"expect(received).toBe(expected) // Object.is equality\n\nExpected: \"active\"\nReceived: undefined","name":"toBe","pass":false}}],"failureMessages":["Error: expect(received).toBe(expected) // Object.is equality\n\nExpected: \"active\"\nReceived: undefined\n    at Object.<anonymous> (/home/ubuntu/mcp-slack-sdk/__tests__/tools/slackListUsers.test.ts:738:54)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)"],"fullName":"slackListUsersTool Metadata should include comprehensive metadata","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"failed","title":"should include comprehensive metadata"}],"endTime":1755947550898,"message":"  ● slackListUsersTool › Input Validation › should accept valid input with defaults\n\n    expect(received).toHaveLength(expected)\n\n    Expected length: 1\n    Received length: 0\n    Received array:  []\n\n      68 |\n      69 |       expect(result.success).toBe(true);\n    > 70 |       expect(result.users).toHaveLength(1);\n         |                            ^\n      71 |       expect(result.users[0].name).toBe('john.doe');\n      72 |       expect(result.summary.total_users).toBe(1);\n      73 |     });\n\n      at Object.<anonymous> (__tests__/tools/slackListUsers.test.ts:70:28)\n\n  ● slackListUsersTool › Input Validation › should validate filter_by_status parameter\n\n    expect(received).toContain(expected) // indexOf\n\n    Expected substring: \"Validation failed\"\n    Received string:    \"Cannot read properties of undefined (reading 'members')\"\n\n      91 |       \n      92 |       expect(result.success).toBe(false);\n    > 93 |       expect(result.error).toContain('Validation failed');\n         |                            ^\n      94 |     });\n      95 |\n      96 |     it('should validate filter_by_role parameter', async () => {\n\n      at Object.<anonymous> (__tests__/tools/slackListUsers.test.ts:93:28)\n\n  ● slackListUsersTool › Input Validation › should validate filter_by_role parameter\n\n    expect(received).toContain(expected) // indexOf\n\n    Expected substring: \"Validation failed\"\n    Received string:    \"Cannot read properties of undefined (reading 'members')\"\n\n       98 |       \n       99 |       expect(result.success).toBe(false);\n    > 100 |       expect(result.error).toContain('Validation failed');\n          |                            ^\n      101 |     });\n      102 |   });\n      103 |\n\n      at Object.<anonymous> (__tests__/tools/slackListUsers.test.ts:100:28)\n\n  ● slackListUsersTool › User Filtering › should filter by account type - regular users only\n\n    expect(received).toHaveLength(expected)\n\n    Expected length: 1\n    Received length: 0\n    Received array:  []\n\n      138 |\n      139 |       expect(result.success).toBe(true);\n    > 140 |       expect(result.users).toHaveLength(1);\n          |                            ^\n      141 |       expect(result.users[0].name).toBe('regular.user');\n      142 |     });\n      143 |\n\n      at Object.<anonymous> (__tests__/tools/slackListUsers.test.ts:140:28)\n\n  ● slackListUsersTool › User Filtering › should filter by account type - bots only\n\n    expect(received).toHaveLength(expected)\n\n    Expected length: 1\n    Received length: 0\n    Received array:  []\n\n      159 |\n      160 |       expect(result.success).toBe(true);\n    > 161 |       expect(result.users).toHaveLength(1);\n          |                            ^\n      162 |       expect(result.users[0].name).toBe('bot.user');\n      163 |     });\n      164 |\n\n      at Object.<anonymous> (__tests__/tools/slackListUsers.test.ts:161:28)\n\n  ● slackListUsersTool › User Filtering › should filter by role - admins only\n\n    expect(received).toHaveLength(expected)\n\n    Expected length: 1\n    Received length: 0\n    Received array:  []\n\n      181 |\n      182 |       expect(result.success).toBe(true);\n    > 183 |       expect(result.users).toHaveLength(1);\n          |                            ^\n      184 |       expect(result.users[0].name).toBe('admin.user');\n      185 |     });\n      186 |\n\n      at Object.<anonymous> (__tests__/tools/slackListUsers.test.ts:183:28)\n\n  ● slackListUsersTool › User Filtering › should filter by name\n\n    expect(received).toHaveLength(expected)\n\n    Expected length: 2\n    Received length: 0\n    Received array:  []\n\n      203 |\n      204 |       expect(result.success).toBe(true);\n    > 205 |       expect(result.users).toHaveLength(2); // john.doe and bob.johnson (contains 'john')\n          |                            ^\n      206 |     });\n      207 |\n      208 |     it('should filter by timezone', async () => {\n\n      at Object.<anonymous> (__tests__/tools/slackListUsers.test.ts:205:28)\n\n  ● slackListUsersTool › User Filtering › should filter by timezone\n\n    expect(received).toHaveLength(expected)\n\n    Expected length: 1\n    Received length: 0\n    Received array:  []\n\n      224 |\n      225 |       expect(result.success).toBe(true);\n    > 226 |       expect(result.users).toHaveLength(1);\n          |                            ^\n      227 |       expect(result.users[0].name).toBe('user.est');\n      228 |     });\n      229 |\n\n      at Object.<anonymous> (__tests__/tools/slackListUsers.test.ts:226:28)\n\n  ● slackListUsersTool › User Filtering › should filter by department\n\n    expect(received).toHaveLength(expected)\n\n    Expected length: 1\n    Received length: 0\n    Received array:  []\n\n      255 |\n      256 |       expect(result.success).toBe(true);\n    > 257 |       expect(result.users).toHaveLength(1);\n          |                            ^\n      258 |       expect(result.users[0].name).toBe('dev.user');\n      259 |     });\n      260 |\n\n      at Object.<anonymous> (__tests__/tools/slackListUsers.test.ts:257:28)\n\n  ● slackListUsersTool › User Filtering › should exclude deleted users by default\n\n    expect(received).toHaveLength(expected)\n\n    Expected length: 1\n    Received length: 0\n    Received array:  []\n\n      275 |\n      276 |       expect(result.success).toBe(true);\n    > 277 |       expect(result.users).toHaveLength(1);\n          |                            ^\n      278 |       expect(result.users[0].name).toBe('active.user');\n      279 |     });\n      280 |\n\n      at Object.<anonymous> (__tests__/tools/slackListUsers.test.ts:277:28)\n\n  ● slackListUsersTool › User Filtering › should include deleted users when requested\n\n    expect(received).toHaveLength(expected)\n\n    Expected length: 2\n    Received length: 0\n    Received array:  []\n\n      296 |\n      297 |       expect(result.success).toBe(true);\n    > 298 |       expect(result.users).toHaveLength(2);\n          |                            ^\n      299 |     });\n      300 |   });\n      301 |\n\n      at Object.<anonymous> (__tests__/tools/slackListUsers.test.ts:298:28)\n\n  ● slackListUsersTool › Presence Integration › should include presence data when requested\n\n    TypeError: Cannot read properties of undefined (reading 'presence')\n\n      328 |\n      329 |       expect(result.success).toBe(true);\n    > 330 |       expect(result.users[0].presence).toBeDefined();\n          |                              ^\n      331 |       expect(result.users[0].presence.status).toBe('active');\n      332 |       expect(result.users[0].presence.connection_count).toBe(2);\n      333 |     });\n\n      at Object.<anonymous> (__tests__/tools/slackListUsers.test.ts:330:30)\n\n  ● slackListUsersTool › Presence Integration › should handle presence API errors gracefully\n\n    TypeError: Cannot read properties of undefined (reading 'presence')\n\n      354 |\n      355 |       expect(result.success).toBe(true);\n    > 356 |       expect(result.users[0].presence).toBeNull();\n          |                              ^\n      357 |     });\n      358 |\n      359 |     it('should skip presence for bots', async () => {\n\n      at Object.<anonymous> (__tests__/tools/slackListUsers.test.ts:356:30)\n\n  ● slackListUsersTool › Presence Integration › should filter by presence status\n\n    expect(received).toHaveLength(expected)\n\n    Expected length: 1\n    Received length: 0\n    Received array:  []\n\n      400 |\n      401 |       expect(result.success).toBe(true);\n    > 402 |       expect(result.users).toHaveLength(1);\n          |                            ^\n      403 |       expect(result.users[0].name).toBe('user1');\n      404 |     });\n      405 |   });\n\n      at Object.<anonymous> (__tests__/tools/slackListUsers.test.ts:402:28)\n\n  ● slackListUsersTool › Sorting › should sort by name ascending (default)\n\n    expect(received).toEqual(expected) // deep equality\n\n    - Expected  - 5\n    + Received  + 1\n\n    - Array [\n    -   \"alice\",\n    -   \"bob\",\n    -   \"charlie\",\n    - ]\n    + Array []\n\n      441 |\n      442 |       expect(result.success).toBe(true);\n    > 443 |       expect(result.users.map((u: any) => u.name)).toEqual(['alice', 'bob', 'charlie']);\n          |                                                    ^\n      444 |     });\n      445 |\n      446 |     it('should sort by name descending', async () => {\n\n      at Object.<anonymous> (__tests__/tools/slackListUsers.test.ts:443:52)\n\n  ● slackListUsersTool › Sorting › should sort by name descending\n\n    expect(received).toEqual(expected) // deep equality\n\n    - Expected  - 5\n    + Received  + 1\n\n    - Array [\n    -   \"charlie\",\n    -   \"bob\",\n    -   \"alice\",\n    - ]\n    + Array []\n\n      457 |\n      458 |       expect(result.success).toBe(true);\n    > 459 |       expect(result.users.map((u: any) => u.name)).toEqual(['charlie', 'bob', 'alice']);\n          |                                                    ^\n      460 |     });\n      461 |\n      462 |     it('should sort by real_name', async () => {\n\n      at Object.<anonymous> (__tests__/tools/slackListUsers.test.ts:459:52)\n\n  ● slackListUsersTool › Sorting › should sort by real_name\n\n    expect(received).toEqual(expected) // deep equality\n\n    - Expected  - 5\n    + Received  + 1\n\n    - Array [\n    -   \"Alice Smith\",\n    -   \"Bob Johnson\",\n    -   \"Charlie Brown\",\n    - ]\n    + Array []\n\n      472 |\n      473 |       expect(result.success).toBe(true);\n    > 474 |       expect(result.users.map((u: any) => u.real_name)).toEqual(['Alice Smith', 'Bob Johnson', 'Charlie Brown']);\n          |                                                         ^\n      475 |     });\n      476 |\n      477 |     it('should sort by display_name', async () => {\n\n      at Object.<anonymous> (__tests__/tools/slackListUsers.test.ts:474:57)\n\n  ● slackListUsersTool › Sorting › should sort by display_name\n\n    expect(received).toBe(expected) // Object.is equality\n\n    Expected: true\n    Received: false\n\n      486 |       });\n      487 |\n    > 488 |       expect(result.success).toBe(true);\n          |                              ^\n      489 |       expect(result.users.map((u: any) => u.profile.display_name)).toEqual(['Alice', 'Bobby', 'CB']);\n      490 |     });\n      491 |   });\n\n      at Object.<anonymous> (__tests__/tools/slackListUsers.test.ts:488:30)\n\n  ● slackListUsersTool › Analytics › should include profile analytics when requested\n\n    TypeError: Cannot read properties of undefined (reading 'profile_analytics')\n\n      522 |\n      523 |       expect(result.success).toBe(true);\n    > 524 |       expect(result.users[0].profile_analytics).toBeDefined();\n          |                              ^\n      525 |       expect(result.users[0].profile_analytics.completeness_score).toBeGreaterThan(0);\n      526 |       expect(result.users[0].profile_analytics.has_custom_avatar).toBe(true);\n      527 |       expect(result.users[0].profile_analytics.has_job_title).toBe(true);\n\n      at Object.<anonymous> (__tests__/tools/slackListUsers.test.ts:524:30)\n\n  ● slackListUsersTool › Analytics › should include activity analytics when requested\n\n    TypeError: Cannot read properties of undefined (reading 'activity_analytics')\n\n      553 |\n      554 |       expect(result.success).toBe(true);\n    > 555 |       expect(result.users[0].activity_analytics).toBeDefined();\n          |                              ^\n      556 |       expect(result.users[0].activity_analytics.estimated_activity_level).toBeDefined();\n      557 |     });\n      558 |\n\n      at Object.<anonymous> (__tests__/tools/slackListUsers.test.ts:555:30)\n\n  ● slackListUsersTool › Analytics › should sort by profile score\n\n    expect(received).toBe(expected) // Object.is equality\n\n    Expected: true\n    Received: false\n\n      593 |       });\n      594 |\n    > 595 |       expect(result.success).toBe(true);\n          |                              ^\n      596 |       expect(result.users[0].name).toBe('complete.user');\n      597 |       expect(result.users[1].name).toBe('incomplete.user');\n      598 |     });\n\n      at Object.<anonymous> (__tests__/tools/slackListUsers.test.ts:595:30)\n\n  ● slackListUsersTool › Summary Statistics › should generate comprehensive summary statistics\n\n    expect(received).toBe(expected) // Object.is equality\n\n    Expected: 3\n    Received: 0\n\n      642 |\n      643 |       expect(result.success).toBe(true);\n    > 644 |       expect(result.summary.total_users).toBe(3);\n          |                                          ^\n      645 |       expect(result.summary.by_type.regular).toBe(2);\n      646 |       expect(result.summary.by_type.bot).toBe(1);\n      647 |       expect(result.summary.by_role.admin).toBe(1);\n\n      at Object.<anonymous> (__tests__/tools/slackListUsers.test.ts:644:42)\n\n  ● slackListUsersTool › Pagination › should handle pagination correctly\n\n    expect(received).toBe(expected) // Object.is equality\n\n    Expected: 2\n    Received: 0\n\n      675 |       expect(result.pagination.has_more).toBe(true);\n      676 |       expect(result.pagination.next_cursor).toBe('next_page_cursor');\n    > 677 |       expect(result.pagination.total_returned).toBe(2);\n          |                                                ^\n      678 |     });\n      679 |\n      680 |     it('should pass cursor to API', async () => {\n\n      at Object.<anonymous> (__tests__/tools/slackListUsers.test.ts:677:48)\n\n  ● slackListUsersTool › Metadata › should include comprehensive metadata\n\n    expect(received).toBe(expected) // Object.is equality\n\n    Expected: \"active\"\n    Received: undefined\n\n      736 |\n      737 |       expect(result.success).toBe(true);\n    > 738 |       expect(result.metadata.filters_applied.status).toBe('active');\n          |                                                      ^\n      739 |       expect(result.metadata.filters_applied.role).toBe('admin');\n      740 |       expect(result.metadata.sorting.sort_by).toBe('real_name');\n      741 |       expect(result.metadata.sorting.sort_direction).toBe('desc');\n\n      at Object.<anonymous> (__tests__/tools/slackListUsers.test.ts:738:54)\n","name":"/home/ubuntu/mcp-slack-sdk/__tests__/tools/slackListUsers.test.ts","startTime":1755947545858,"status":"failed","summary":""},{"assertionResults":[{"ancestorTitles":["Slack Send Message Integration Tests","Validation Tests"],"duration":null,"failureDetails":[],"failureMessages":[],"fullName":"Slack Send Message Integration Tests Validation Tests should reject empty arguments","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"pending","title":"should reject empty arguments"},{"ancestorTitles":["Slack Send Message Integration Tests","Validation Tests"],"duration":null,"failureDetails":[],"failureMessages":[],"fullName":"Slack Send Message Integration Tests Validation Tests should reject empty channel","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"pending","title":"should reject empty channel"},{"ancestorTitles":["Slack Send Message Integration Tests","Validation Tests"],"duration":null,"failureDetails":[],"failureMessages":[],"fullName":"Slack Send Message Integration Tests Validation Tests should reject empty text","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"pending","title":"should reject empty text"},{"ancestorTitles":["Slack Send Message Integration Tests","Integration Tests"],"duration":null,"failureDetails":[],"failureMessages":[],"fullName":"Slack Send Message Integration Tests Integration Tests should send message successfully","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"pending","title":"should send message successfully"},{"ancestorTitles":["Slack Send Message Integration Tests","Integration Tests"],"duration":null,"failureDetails":[],"failureMessages":[],"fullName":"Slack Send Message Integration Tests Integration Tests should send message with thread reply","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"pending","title":"should send message with thread reply"},{"ancestorTitles":["Slack Send Message Integration Tests","Integration Tests"],"duration":null,"failureDetails":[],"failureMessages":[],"fullName":"Slack Send Message Integration Tests Integration Tests should handle non-existent channel gracefully","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"pending","title":"should handle non-existent channel gracefully"},{"ancestorTitles":["Slack Send Message Integration Tests","Edge Cases"],"duration":null,"failureDetails":[],"failureMessages":[],"fullName":"Slack Send Message Integration Tests Edge Cases should handle very long messages","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"pending","title":"should handle very long messages"},{"ancestorTitles":["Slack Send Message Integration Tests","Edge Cases"],"duration":null,"failureDetails":[],"failureMessages":[],"fullName":"Slack Send Message Integration Tests Edge Cases should handle messages with special characters","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"pending","title":"should handle messages with special characters"}],"coverage":{},"endTime":1755947552100,"message":"","name":"/home/ubuntu/mcp-slack-sdk/__tests__/integration/slackSendMessage.integration.test.ts","startTime":1755947552100,"status":"skipped","summary":""},{"assertionResults":[{"ancestorTitles":["slackJoinChannelTool","Input Validation"],"duration":163,"failureDetails":[],"failureMessages":[],"fullName":"slackJoinChannelTool Input Validation should validate required channel parameter","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"should validate required channel parameter"},{"ancestorTitles":["slackJoinChannelTool","Input Validation"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"slackJoinChannelTool Input Validation should validate channel format","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"should validate channel format"},{"ancestorTitles":["slackJoinChannelTool","Input Validation"],"duration":3,"failureDetails":[],"failureMessages":[],"fullName":"slackJoinChannelTool Input Validation should accept valid channel ID format","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"should accept valid channel ID format"},{"ancestorTitles":["slackJoinChannelTool","Channel Resolution"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"slackJoinChannelTool Channel Resolution should resolve channel name to ID","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"should resolve channel name to ID"},{"ancestorTitles":["slackJoinChannelTool","Channel Resolution"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"slackJoinChannelTool Channel Resolution should handle channel not found during resolution","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"should handle channel not found during resolution"},{"ancestorTitles":["slackJoinChannelTool","Pre-join Analysis"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"slackJoinChannelTool Pre-join Analysis should detect already member status","invocations":1,"location":null,"numPassingAsserts":4,"retryReasons":[],"status":"passed","title":"should detect already member status"},{"ancestorTitles":["slackJoinChannelTool","Pre-join Analysis"],"duration":6,"failureDetails":[{"matcherResult":{"actual":true,"expected":false,"message":"expect(received).toBe(expected) // Object.is equality\n\nExpected: false\nReceived: true","name":"toBe","pass":false}}],"failureMessages":["Error: expect(received).toBe(expected) // Object.is equality\n\nExpected: false\nReceived: true\n    at Object.<anonymous> (/home/ubuntu/mcp-slack-sdk/__tests__/tools/slackJoinChannel.test.ts:186:30)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)"],"fullName":"slackJoinChannelTool Pre-join Analysis should detect archived channel","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should detect archived channel"},{"ancestorTitles":["slackJoinChannelTool","Join Operation"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"slackJoinChannelTool Join Operation should successfully join a public channel","invocations":1,"location":null,"numPassingAsserts":4,"retryReasons":[],"status":"passed","title":"should successfully join a public channel"},{"ancestorTitles":["slackJoinChannelTool","Join Operation"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"slackJoinChannelTool Join Operation should handle already_in_channel warning","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"status":"passed","title":"should handle already_in_channel warning"},{"ancestorTitles":["slackJoinChannelTool","Error Handling"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"slackJoinChannelTool Error Handling should handle private channel access error","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"should handle private channel access error"},{"ancestorTitles":["slackJoinChannelTool","Error Handling"],"duration":103,"failureDetails":[],"failureMessages":[],"fullName":"slackJoinChannelTool Error Handling should handle rate limiting with retry","invocations":1,"location":null,"numPassingAsserts":4,"retryReasons":[],"status":"passed","title":"should handle rate limiting with retry"},{"ancestorTitles":["slackJoinChannelTool","Tool Metadata"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"slackJoinChannelTool Tool Metadata should have correct tool metadata","invocations":1,"location":null,"numPassingAsserts":4,"retryReasons":[],"status":"passed","title":"should have correct tool metadata"},{"ancestorTitles":["slackJoinChannelTool","Tool Metadata"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"slackJoinChannelTool Tool Metadata should include execution time in response","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"status":"passed","title":"should include execution time in response"}],"endTime":1755947550908,"message":"  ● slackJoinChannelTool › Pre-join Analysis › should detect archived channel\n\n    expect(received).toBe(expected) // Object.is equality\n\n    Expected: false\n    Received: true\n\n      184 |       });\n      185 |       \n    > 186 |       expect(result.success).toBe(false);\n          |                              ^\n      187 |       expect(result.error).toContain('Cannot join archived channel');\n      188 |     });\n      189 |   });\n\n      at Object.<anonymous> (__tests__/tools/slackJoinChannel.test.ts:186:30)\n","name":"/home/ubuntu/mcp-slack-sdk/__tests__/tools/slackJoinChannel.test.ts","startTime":1755947545911,"status":"failed","summary":""},{"assertionResults":[{"ancestorTitles":["Slack Create Channel Integration Tests","Validation Tests"],"duration":null,"failureDetails":[],"failureMessages":[],"fullName":"Slack Create Channel Integration Tests Validation Tests should reject empty arguments","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"pending","title":"should reject empty arguments"},{"ancestorTitles":["Slack Create Channel Integration Tests","Validation Tests"],"duration":null,"failureDetails":[],"failureMessages":[],"fullName":"Slack Create Channel Integration Tests Validation Tests should reject empty name","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"pending","title":"should reject empty name"},{"ancestorTitles":["Slack Create Channel Integration Tests","Validation Tests"],"duration":null,"failureDetails":[],"failureMessages":[],"fullName":"Slack Create Channel Integration Tests Validation Tests should reject invalid channel name format","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"pending","title":"should reject invalid channel name format"},{"ancestorTitles":["Slack Create Channel Integration Tests","Integration Tests"],"duration":null,"failureDetails":[],"failureMessages":[],"fullName":"Slack Create Channel Integration Tests Integration Tests should create public channel successfully","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"pending","title":"should create public channel successfully"},{"ancestorTitles":["Slack Create Channel Integration Tests","Integration Tests"],"duration":null,"failureDetails":[],"failureMessages":[],"fullName":"Slack Create Channel Integration Tests Integration Tests should create private channel successfully","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"pending","title":"should create private channel successfully"},{"ancestorTitles":["Slack Create Channel Integration Tests","Integration Tests"],"duration":null,"failureDetails":[],"failureMessages":[],"fullName":"Slack Create Channel Integration Tests Integration Tests should handle duplicate channel name gracefully","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"pending","title":"should handle duplicate channel name gracefully"},{"ancestorTitles":["Slack Create Channel Integration Tests","Edge Cases"],"duration":null,"failureDetails":[],"failureMessages":[],"fullName":"Slack Create Channel Integration Tests Edge Cases should handle very long channel name","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"pending","title":"should handle very long channel name"},{"ancestorTitles":["Slack Create Channel Integration Tests","Edge Cases"],"duration":null,"failureDetails":[],"failureMessages":[],"fullName":"Slack Create Channel Integration Tests Edge Cases should handle channel name with invalid characters","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"pending","title":"should handle channel name with invalid characters"}],"coverage":{},"endTime":1755947552100,"message":"","name":"/home/ubuntu/mcp-slack-sdk/__tests__/integration/slackCreateChannel.integration.test.ts","startTime":1755947552100,"status":"skipped","summary":""},{"assertionResults":[{"ancestorTitles":["Slack Get User Info Integration Tests","Validation Tests"],"duration":null,"failureDetails":[],"failureMessages":[],"fullName":"Slack Get User Info Integration Tests Validation Tests should reject empty arguments","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"pending","title":"should reject empty arguments"},{"ancestorTitles":["Slack Get User Info Integration Tests","Validation Tests"],"duration":null,"failureDetails":[],"failureMessages":[],"fullName":"Slack Get User Info Integration Tests Validation Tests should reject empty userId","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"pending","title":"should reject empty userId"},{"ancestorTitles":["Slack Get User Info Integration Tests","Integration Tests"],"duration":null,"failureDetails":[],"failureMessages":[],"fullName":"Slack Get User Info Integration Tests Integration Tests should get user info successfully with valid user ID","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"pending","title":"should get user info successfully with valid user ID"},{"ancestorTitles":["Slack Get User Info Integration Tests","Integration Tests"],"duration":null,"failureDetails":[],"failureMessages":[],"fullName":"Slack Get User Info Integration Tests Integration Tests should handle non-existent user gracefully","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"pending","title":"should handle non-existent user gracefully"},{"ancestorTitles":["Slack Get User Info Integration Tests","Edge Cases"],"duration":null,"failureDetails":[],"failureMessages":[],"fullName":"Slack Get User Info Integration Tests Edge Cases should handle malformed user ID","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"pending","title":"should handle malformed user ID"},{"ancestorTitles":["Slack Get User Info Integration Tests","Edge Cases"],"duration":null,"failureDetails":[],"failureMessages":[],"fullName":"Slack Get User Info Integration Tests Edge Cases should validate user ID format","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"pending","title":"should validate user ID format"}],"coverage":{},"endTime":1755947552100,"message":"","name":"/home/ubuntu/mcp-slack-sdk/__tests__/integration/slackGetUserInfo.integration.test.ts","startTime":1755947552100,"status":"skipped","summary":""},{"assertionResults":[{"ancestorTitles":["Slack Set Status Integration Tests","Validation Tests"],"duration":null,"failureDetails":[],"failureMessages":[],"fullName":"Slack Set Status Integration Tests Validation Tests should reject empty arguments","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"pending","title":"should reject empty arguments"},{"ancestorTitles":["Slack Set Status Integration Tests","Validation Tests"],"duration":null,"failureDetails":[],"failureMessages":[],"fullName":"Slack Set Status Integration Tests Validation Tests should reject empty text","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"pending","title":"should reject empty text"},{"ancestorTitles":["Slack Set Status Integration Tests","Integration Tests"],"duration":null,"failureDetails":[],"failureMessages":[],"fullName":"Slack Set Status Integration Tests Integration Tests should set status successfully","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"pending","title":"should set status successfully"},{"ancestorTitles":["Slack Set Status Integration Tests","Integration Tests"],"duration":null,"failureDetails":[],"failureMessages":[],"fullName":"Slack Set Status Integration Tests Integration Tests should set status with expiration","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"pending","title":"should set status with expiration"},{"ancestorTitles":["Slack Set Status Integration Tests","Integration Tests"],"duration":null,"failureDetails":[],"failureMessages":[],"fullName":"Slack Set Status Integration Tests Integration Tests should clear status","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"pending","title":"should clear status"},{"ancestorTitles":["Slack Set Status Integration Tests","Edge Cases"],"duration":null,"failureDetails":[],"failureMessages":[],"fullName":"Slack Set Status Integration Tests Edge Cases should handle very long status text","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"pending","title":"should handle very long status text"},{"ancestorTitles":["Slack Set Status Integration Tests","Edge Cases"],"duration":null,"failureDetails":[],"failureMessages":[],"fullName":"Slack Set Status Integration Tests Edge Cases should handle custom emoji","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"pending","title":"should handle custom emoji"},{"ancestorTitles":["Slack Set Status Integration Tests","Edge Cases"],"duration":null,"failureDetails":[],"failureMessages":[],"fullName":"Slack Set Status Integration Tests Edge Cases should handle past expiration time","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"pending","title":"should handle past expiration time"}],"coverage":{},"endTime":1755947552100,"message":"","name":"/home/ubuntu/mcp-slack-sdk/__tests__/integration/slackSetStatus.integration.test.ts","startTime":1755947552100,"status":"skipped","summary":""},{"assertionResults":[{"ancestorTitles":["Slack Get Channel History Integration Tests","Validation Tests"],"duration":null,"failureDetails":[],"failureMessages":[],"fullName":"Slack Get Channel History Integration Tests Validation Tests should reject empty arguments","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"pending","title":"should reject empty arguments"},{"ancestorTitles":["Slack Get Channel History Integration Tests","Validation Tests"],"duration":null,"failureDetails":[],"failureMessages":[],"fullName":"Slack Get Channel History Integration Tests Validation Tests should reject empty channel","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"pending","title":"should reject empty channel"},{"ancestorTitles":["Slack Get Channel History Integration Tests","Validation Tests"],"duration":null,"failureDetails":[],"failureMessages":[],"fullName":"Slack Get Channel History Integration Tests Validation Tests should reject negative limit","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"pending","title":"should reject negative limit"},{"ancestorTitles":["Slack Get Channel History Integration Tests","Integration Tests"],"duration":null,"failureDetails":[],"failureMessages":[],"fullName":"Slack Get Channel History Integration Tests Integration Tests should get channel history successfully","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"pending","title":"should get channel history successfully"},{"ancestorTitles":["Slack Get Channel History Integration Tests","Integration Tests"],"duration":null,"failureDetails":[],"failureMessages":[],"fullName":"Slack Get Channel History Integration Tests Integration Tests should respect limit parameter","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"pending","title":"should respect limit parameter"},{"ancestorTitles":["Slack Get Channel History Integration Tests","Integration Tests"],"duration":null,"failureDetails":[],"failureMessages":[],"fullName":"Slack Get Channel History Integration Tests Integration Tests should handle non-existent channel gracefully","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"pending","title":"should handle non-existent channel gracefully"},{"ancestorTitles":["Slack Get Channel History Integration Tests","Edge Cases"],"duration":null,"failureDetails":[],"failureMessages":[],"fullName":"Slack Get Channel History Integration Tests Edge Cases should handle very large limit","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"pending","title":"should handle very large limit"},{"ancestorTitles":["Slack Get Channel History Integration Tests","Edge Cases"],"duration":null,"failureDetails":[],"failureMessages":[],"fullName":"Slack Get Channel History Integration Tests Edge Cases should handle channel with no messages","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"pending","title":"should handle channel with no messages"}],"coverage":{},"endTime":1755947552100,"message":"","name":"/home/ubuntu/mcp-slack-sdk/__tests__/integration/slackGetChannelHistory.integration.test.ts","startTime":1755947552100,"status":"skipped","summary":""},{"assertionResults":[],"coverage":{},"endTime":1755947552100,"message":"  ● Test suite failed to run\n\n    \u001b[96m__tests__/tools/slackSendMessage.test.ts\u001b[0m:\u001b[93m33\u001b[0m:\u001b[93m22\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'toBeValidSlackResponse' does not exist on type 'JestMatchers<any>'.\n\n    \u001b[7m33\u001b[0m       expect(result).toBeValidSlackResponse();\n    \u001b[7m  \u001b[0m \u001b[91m                     ~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n    \u001b[96m__tests__/tools/slackSendMessage.test.ts\u001b[0m:\u001b[93m44\u001b[0m:\u001b[93m22\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'toBeValidSlackResponse' does not exist on type 'JestMatchers<any>'.\n\n    \u001b[7m44\u001b[0m       expect(result).toBeValidSlackResponse();\n    \u001b[7m  \u001b[0m \u001b[91m                     ~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n    \u001b[96m__tests__/tools/slackSendMessage.test.ts\u001b[0m:\u001b[93m54\u001b[0m:\u001b[93m22\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'toBeValidSlackResponse' does not exist on type 'JestMatchers<any>'.\n\n    \u001b[7m54\u001b[0m       expect(result).toBeValidSlackResponse();\n    \u001b[7m  \u001b[0m \u001b[91m                     ~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n    \u001b[96m__tests__/tools/slackSendMessage.test.ts\u001b[0m:\u001b[93m74\u001b[0m:\u001b[93m22\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'toBeValidSlackResponse' does not exist on type 'JestMatchers<any>'.\n\n    \u001b[7m74\u001b[0m       expect(result).toBeValidSlackResponse();\n    \u001b[7m  \u001b[0m \u001b[91m                     ~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n    \u001b[96m__tests__/tools/slackSendMessage.test.ts\u001b[0m:\u001b[93m75\u001b[0m:\u001b[93m22\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'toHaveExecutionTime' does not exist on type 'JestMatchers<any>'.\n\n    \u001b[7m75\u001b[0m       expect(result).toHaveExecutionTime(10000);\n    \u001b[7m  \u001b[0m \u001b[91m                     ~~~~~~~~~~~~~~~~~~~\u001b[0m\n    \u001b[96m__tests__/tools/slackSendMessage.test.ts\u001b[0m:\u001b[93m112\u001b[0m:\u001b[93m22\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'toBeValidSlackResponse' does not exist on type 'JestMatchers<any>'.\n\n    \u001b[7m112\u001b[0m       expect(result).toBeValidSlackResponse();\n    \u001b[7m   \u001b[0m \u001b[91m                     ~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n","name":"/home/ubuntu/mcp-slack-sdk/__tests__/tools/slackSendMessage.test.ts","startTime":1755947552100,"status":"failed","summary":""},{"assertionResults":[{"ancestorTitles":["slackArchiveChannelTool","Tool Configuration"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"slackArchiveChannelTool Tool Configuration should have correct tool metadata","invocations":1,"location":null,"numPassingAsserts":4,"retryReasons":[],"status":"passed","title":"should have correct tool metadata"},{"ancestorTitles":["slackArchiveChannelTool","Tool Configuration"],"duration":25,"failureDetails":[],"failureMessages":[],"fullName":"slackArchiveChannelTool Tool Configuration should have comprehensive input schema properties","invocations":1,"location":null,"numPassingAsserts":16,"retryReasons":[],"status":"passed","title":"should have comprehensive input schema properties"},{"ancestorTitles":["slackArchiveChannelTool","Input Validation"],"duration":34,"failureDetails":[],"failureMessages":[],"fullName":"slackArchiveChannelTool Input Validation should validate required channel parameter","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"should validate required channel parameter"},{"ancestorTitles":["slackArchiveChannelTool","Input Validation"],"duration":3,"failureDetails":[],"failureMessages":[],"fullName":"slackArchiveChannelTool Input Validation should validate channel format","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"should validate channel format"},{"ancestorTitles":["slackArchiveChannelTool","Input Validation"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"slackArchiveChannelTool Input Validation should validate retry attempts range","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"should validate retry attempts range"},{"ancestorTitles":["slackArchiveChannelTool","Input Validation"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"slackArchiveChannelTool Input Validation should validate backup message count range","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"should validate backup message count range"}],"endTime":1755947551560,"message":"","name":"/home/ubuntu/mcp-slack-sdk/__tests__/tools/slackArchiveChannel.test.ts","startTime":1755947550984,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["slackListChannelsTool","Input Validation"],"duration":17,"failureDetails":[],"failureMessages":[],"fullName":"slackListChannelsTool Input Validation should accept valid input with defaults","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"status":"passed","title":"should accept valid input with defaults"},{"ancestorTitles":["slackListChannelsTool","Input Validation"],"duration":71,"failureDetails":[],"failureMessages":[],"fullName":"slackListChannelsTool Input Validation should validate channel types parameter","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"should validate channel types parameter"},{"ancestorTitles":["slackListChannelsTool","Input Validation"],"duration":20,"failureDetails":[],"failureMessages":[],"fullName":"slackListChannelsTool Input Validation should validate limit parameter","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"should validate limit parameter"},{"ancestorTitles":["slackListChannelsTool","Input Validation"],"duration":3,"failureDetails":[],"failureMessages":[],"fullName":"slackListChannelsTool Input Validation should validate sort_by parameter","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"should validate sort_by parameter"},{"ancestorTitles":["slackListChannelsTool","Channel Listing"],"duration":10,"failureDetails":[],"failureMessages":[],"fullName":"slackListChannelsTool Channel Listing should list channels with basic information","invocations":1,"location":null,"numPassingAsserts":4,"retryReasons":[],"status":"passed","title":"should list channels with basic information"},{"ancestorTitles":["slackListChannelsTool","Channel Listing"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"slackListChannelsTool Channel Listing should filter channels by name","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"status":"passed","title":"should filter channels by name"},{"ancestorTitles":["slackListChannelsTool","Channel Listing"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"slackListChannelsTool Channel Listing should sort channels by name","invocations":1,"location":null,"numPassingAsserts":4,"retryReasons":[],"status":"passed","title":"should sort channels by name"},{"ancestorTitles":["slackListChannelsTool","Channel Listing"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"slackListChannelsTool Channel Listing should include member count when requested","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"should include member count when requested"},{"ancestorTitles":["slackListChannelsTool","Channel Listing"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"slackListChannelsTool Channel Listing should generate summary statistics","invocations":1,"location":null,"numPassingAsserts":6,"retryReasons":[],"status":"passed","title":"should generate summary statistics"},{"ancestorTitles":["slackListChannelsTool","Error Handling"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"slackListChannelsTool Error Handling should handle Slack API errors gracefully","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"should handle Slack API errors gracefully"},{"ancestorTitles":["slackListChannelsTool","Error Handling"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"slackListChannelsTool Error Handling should handle member count API errors gracefully","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"should handle member count API errors gracefully"},{"ancestorTitles":["slackListChannelsTool","Pagination"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"slackListChannelsTool Pagination should handle pagination correctly","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"status":"passed","title":"should handle pagination correctly"}],"endTime":1755947551688,"message":"","name":"/home/ubuntu/mcp-slack-sdk/__tests__/tools/slackListChannels.test.ts","startTime":1755947551010,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["slackLeaveChannelTool","Input Validation"],"duration":136,"failureDetails":[],"failureMessages":[],"fullName":"slackLeaveChannelTool Input Validation should validate required channel parameter","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"should validate required channel parameter"},{"ancestorTitles":["slackLeaveChannelTool","Input Validation"],"duration":3,"failureDetails":[],"failureMessages":[],"fullName":"slackLeaveChannelTool Input Validation should validate channel format","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"should validate channel format"},{"ancestorTitles":["slackLeaveChannelTool","Input Validation"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"slackLeaveChannelTool Input Validation should accept valid channel ID format","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"status":"passed","title":"should accept valid channel ID format"},{"ancestorTitles":["slackLeaveChannelTool","Input Validation"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"slackLeaveChannelTool Input Validation should accept valid channel name format","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"status":"passed","title":"should accept valid channel name format"},{"ancestorTitles":["slackLeaveChannelTool","Membership Validation"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"slackLeaveChannelTool Membership Validation should return early if not a member and check_membership is true","invocations":1,"location":null,"numPassingAsserts":4,"retryReasons":[],"status":"passed","title":"should return early if not a member and check_membership is true"},{"ancestorTitles":["slackLeaveChannelTool","Membership Validation"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"slackLeaveChannelTool Membership Validation should proceed with leave if check_membership is false","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"status":"passed","title":"should proceed with leave if check_membership is false"},{"ancestorTitles":["slackLeaveChannelTool","General Channel Protection"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"slackLeaveChannelTool General Channel Protection should prevent leaving general channel when prevent_general_leave is true","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"status":"passed","title":"should prevent leaving general channel when prevent_general_leave is true"},{"ancestorTitles":["slackLeaveChannelTool","General Channel Protection"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"slackLeaveChannelTool General Channel Protection should allow leaving general channel when prevent_general_leave is false","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"status":"passed","title":"should allow leaving general channel when prevent_general_leave is false"},{"ancestorTitles":["slackLeaveChannelTool","Error Handling"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"slackLeaveChannelTool Error Handling should handle channel not found error","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"should handle channel not found error"},{"ancestorTitles":["slackLeaveChannelTool","Error Handling"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"slackLeaveChannelTool Error Handling should handle not_in_channel error","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"status":"passed","title":"should handle not_in_channel error"},{"ancestorTitles":["slackLeaveChannelTool","Error Handling"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"slackLeaveChannelTool Error Handling should handle cant_leave_general error","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"status":"passed","title":"should handle cant_leave_general error"},{"ancestorTitles":["slackLeaveChannelTool","Error Handling"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"slackLeaveChannelTool Error Handling should handle authentication errors","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"should handle authentication errors"},{"ancestorTitles":["slackLeaveChannelTool","Retry Logic"],"duration":102,"failureDetails":[],"failureMessages":[],"fullName":"slackLeaveChannelTool Retry Logic should retry on retryable errors","invocations":1,"location":null,"numPassingAsserts":4,"retryReasons":[],"status":"passed","title":"should retry on retryable errors"},{"ancestorTitles":["slackLeaveChannelTool","Retry Logic"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"slackLeaveChannelTool Retry Logic should not retry on non-retryable errors","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"should not retry on non-retryable errors"},{"ancestorTitles":["slackLeaveChannelTool","Analytics and Metadata"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"slackLeaveChannelTool Analytics and Metadata should include comprehensive analytics when requested","invocations":1,"location":null,"numPassingAsserts":8,"retryReasons":[],"status":"passed","title":"should include comprehensive analytics when requested"},{"ancestorTitles":["slackLeaveChannelTool","Analytics and Metadata"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"slackLeaveChannelTool Analytics and Metadata should handle large channel confirmation requirements","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"should handle large channel confirmation requirements"},{"ancestorTitles":["slackLeaveChannelTool","Private Channel Handling"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"slackLeaveChannelTool Private Channel Handling should handle private channel leave successfully","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"status":"passed","title":"should handle private channel leave successfully"},{"ancestorTitles":["slackLeaveChannelTool","Private Channel Handling"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"slackLeaveChannelTool Private Channel Handling should handle post-leave data collection failure for private channels","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"should handle post-leave data collection failure for private channels"}],"endTime":1755947551734,"message":"","name":"/home/ubuntu/mcp-slack-sdk/__tests__/tools/slackLeaveChannel.test.ts","startTime":1755947550954,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["Slack Client","Connection Tests"],"duration":null,"failureDetails":[],"failureMessages":[],"fullName":"Slack Client Connection Tests should test connection successfully","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"pending","title":"should test connection successfully"},{"ancestorTitles":["Slack Client","Connection Tests"],"duration":null,"failureDetails":[],"failureMessages":[],"fullName":"Slack Client Connection Tests should get workspace info","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"pending","title":"should get workspace info"},{"ancestorTitles":["Slack Client","Channel Resolution"],"duration":null,"failureDetails":[],"failureMessages":[],"fullName":"Slack Client Channel Resolution should resolve channel by name","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"pending","title":"should resolve channel by name"},{"ancestorTitles":["Slack Client","Channel Resolution"],"duration":null,"failureDetails":[],"failureMessages":[],"fullName":"Slack Client Channel Resolution should return channel ID as-is if already an ID","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"pending","title":"should return channel ID as-is if already an ID"},{"ancestorTitles":["Slack Client","User Resolution"],"duration":null,"failureDetails":[],"failureMessages":[],"fullName":"Slack Client User Resolution should return user ID as-is if already an ID","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"pending","title":"should return user ID as-is if already an ID"},{"ancestorTitles":["Slack Client","Error Handling"],"duration":220,"failureDetails":[],"failureMessages":[],"fullName":"Slack Client Error Handling should handle invalid channel gracefully","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle invalid channel gracefully"}],"endTime":1755947551822,"message":"","name":"/home/ubuntu/mcp-slack-sdk/__tests__/utils/slackClient.test.ts","startTime":1755947551064,"status":"focused","summary":""},{"assertionResults":[],"coverage":{},"endTime":1755947552100,"message":"  ● Test suite failed to run\n\n    \u001b[96msrc/tools/slackSearchMessages.ts\u001b[0m:\u001b[93m4\u001b[0m:\u001b[93m1\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS6192: \u001b[0mAll imports in import declaration are unused.\n\n    \u001b[7m4\u001b[0m import { Validator, ToolSchemas } from '@/utils/validator';\n    \u001b[7m \u001b[0m \u001b[91m~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n    \u001b[96msrc/tools/slackSearchMessages.ts\u001b[0m:\u001b[93m64\u001b[0m:\u001b[93m29\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2304: \u001b[0mCannot find name 'analyzeQuery'.\n\n    \u001b[7m64\u001b[0m             query_analysis: analyzeQuery(validatedArgs.query),\n    \u001b[7m  \u001b[0m \u001b[91m                            ~~~~~~~~~~~~\u001b[0m\n    \u001b[96msrc/tools/slackSearchMessages.ts\u001b[0m:\u001b[93m65\u001b[0m:\u001b[93m29\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2304: \u001b[0mCannot find name 'assessResultQuality'.\n\n    \u001b[7m65\u001b[0m             result_quality: assessResultQuality(result.messages),\n    \u001b[7m  \u001b[0m \u001b[91m                            ~~~~~~~~~~~~~~~~~~~\u001b[0m\n    \u001b[96msrc/tools/slackSearchMessages.ts\u001b[0m:\u001b[93m66\u001b[0m:\u001b[93m35\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2304: \u001b[0mCannot find name 'calculateSearchEffectiveness'.\n\n    \u001b[7m66\u001b[0m             search_effectiveness: calculateSearchEffectiveness(result),\n    \u001b[7m  \u001b[0m \u001b[91m                                  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n    \u001b[96msrc/tools/slackSearchMessages.ts\u001b[0m:\u001b[93m67\u001b[0m:\u001b[93m37\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2304: \u001b[0mCannot find name 'analyzeRelevanceDistribution'.\n\n    \u001b[7m67\u001b[0m             relevance_distribution: analyzeRelevanceDistribution(result.messages),\n    \u001b[7m  \u001b[0m \u001b[91m                                    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n    \u001b[96msrc/tools/slackSearchMessages.ts\u001b[0m:\u001b[93m70\u001b[0m:\u001b[93m31\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2304: \u001b[0mCannot find name 'analyzeResultDiversity'.\n\n    \u001b[7m70\u001b[0m             result_diversity: analyzeResultDiversity(result.messages),\n    \u001b[7m  \u001b[0m \u001b[91m                              ~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n    \u001b[96msrc/tools/slackSearchMessages.ts\u001b[0m:\u001b[93m71\u001b[0m:\u001b[93m36\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2304: \u001b[0mCannot find name 'analyzeTemporalDistribution'.\n\n    \u001b[7m71\u001b[0m             temporal_distribution: analyzeTemporalDistribution(result.messages),\n    \u001b[7m  \u001b[0m \u001b[91m                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n    \u001b[96msrc/tools/slackSearchMessages.ts\u001b[0m:\u001b[93m72\u001b[0m:\u001b[93m30\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2304: \u001b[0mCannot find name 'analyzeSourceDistribution'.\n\n    \u001b[7m72\u001b[0m             source_analysis: analyzeSourceDistribution(result.messages),\n    \u001b[7m  \u001b[0m \u001b[91m                             ~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n    \u001b[96msrc/tools/slackSearchMessages.ts\u001b[0m:\u001b[93m73\u001b[0m:\u001b[93m28\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2304: \u001b[0mCannot find name 'analyzeContentTypes'.\n\n    \u001b[7m73\u001b[0m             content_types: analyzeContentTypes(result.messages),\n    \u001b[7m  \u001b[0m \u001b[91m                           ~~~~~~~~~~~~~~~~~~~\u001b[0m\n    \u001b[96msrc/tools/slackSearchMessages.ts\u001b[0m:\u001b[93m76\u001b[0m:\u001b[93m32\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2304: \u001b[0mCannot find name 'generateQuerySuggestions'.\n\n    \u001b[7m76\u001b[0m             query_suggestions: generateQuerySuggestions(validatedArgs.query, result),\n    \u001b[7m  \u001b[0m \u001b[91m                               ~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n    \u001b[96msrc/tools/slackSearchMessages.ts\u001b[0m:\u001b[93m77\u001b[0m:\u001b[93m37\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2304: \u001b[0mCannot find name 'suggestFilters'.\n\n    \u001b[7m77\u001b[0m             filter_recommendations: suggestFilters(result.messages),\n    \u001b[7m  \u001b[0m \u001b[91m                                    ~~~~~~~~~~~~~~\u001b[0m\n    \u001b[96msrc/tools/slackSearchMessages.ts\u001b[0m:\u001b[93m78\u001b[0m:\u001b[93m32\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2304: \u001b[0mCannot find name 'suggestRefinements'.\n\n    \u001b[7m78\u001b[0m             search_refinement: suggestRefinements(validatedArgs.query, result),\n    \u001b[7m  \u001b[0m \u001b[91m                               ~~~~~~~~~~~~~~~~~~\u001b[0m\n    \u001b[96msrc/tools/slackSearchMessages.ts\u001b[0m:\u001b[93m82\u001b[0m:\u001b[93m27\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2304: \u001b[0mCannot find name 'generateSearchRecommendations'.\n\n    \u001b[7m82\u001b[0m         recommendations = generateSearchRecommendations(analytics, validatedArgs, result);\n    \u001b[7m  \u001b[0m \u001b[91m                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n    \u001b[96msrc/tools/slackSearchMessages.ts\u001b[0m:\u001b[93m122\u001b[0m:\u001b[93m22\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2304: \u001b[0mCannot find name 'inferSearchIntent'.\n\n    \u001b[7m122\u001b[0m       search_intent: inferSearchIntent(query),\n    \u001b[7m   \u001b[0m \u001b[91m                     ~~~~~~~~~~~~~~~~~\u001b[0m\n    \u001b[96msrc/tools/slackSearchMessages.ts\u001b[0m:\u001b[93m165\u001b[0m:\u001b[93m32\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 's' implicitly has an 'any' type.\n\n    \u001b[7m165\u001b[0m     const high = scores.filter(s => s > 0.7).length;\n    \u001b[7m   \u001b[0m \u001b[91m                               ~\u001b[0m\n    \u001b[96msrc/tools/slackSearchMessages.ts\u001b[0m:\u001b[93m166\u001b[0m:\u001b[93m34\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 's' implicitly has an 'any' type.\n\n    \u001b[7m166\u001b[0m     const medium = scores.filter(s => s > 0.4 && s <= 0.7).length;\n    \u001b[7m   \u001b[0m \u001b[91m                                 ~\u001b[0m\n    \u001b[96msrc/tools/slackSearchMessages.ts\u001b[0m:\u001b[93m167\u001b[0m:\u001b[93m31\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 's' implicitly has an 'any' type.\n\n    \u001b[7m167\u001b[0m     const low = scores.filter(s => s <= 0.4).length;\n    \u001b[7m   \u001b[0m \u001b[91m                              ~\u001b[0m\n    \u001b[96msrc/tools/slackSearchMessages.ts\u001b[0m:\u001b[93m220\u001b[0m:\u001b[93m7\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7053: \u001b[0mElement implicitly has an 'any' type because expression of type 'any' can't be used to index type '{}'.\n\n    \u001b[7m220\u001b[0m       channelCounts[channelName] = (channelCounts[channelName] || 0) + 1;\n    \u001b[7m   \u001b[0m \u001b[91m      ~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n    \u001b[96msrc/tools/slackSearchMessages.ts\u001b[0m:\u001b[93m220\u001b[0m:\u001b[93m37\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7053: \u001b[0mElement implicitly has an 'any' type because expression of type 'any' can't be used to index type '{}'.\n\n    \u001b[7m220\u001b[0m       channelCounts[channelName] = (channelCounts[channelName] || 0) + 1;\n    \u001b[7m   \u001b[0m \u001b[91m                                    ~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n    \u001b[96msrc/tools/slackSearchMessages.ts\u001b[0m:\u001b[93m297\u001b[0m:\u001b[93m22\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS6133: \u001b[0m'query' is declared but its value is never read.\n\n    \u001b[7m297\u001b[0m   suggestRefinements(query: string, result: any): string[] {\n    \u001b[7m   \u001b[0m \u001b[91m                     ~~~~~\u001b[0m\n    \u001b[96msrc/tools/slackSearchMessages.ts\u001b[0m:\u001b[93m312\u001b[0m:\u001b[93m49\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS6133: \u001b[0m'args' is declared but its value is never read.\n\n    \u001b[7m312\u001b[0m   generateSearchRecommendations(analytics: any, args: any, result: any): string[] {\n    \u001b[7m   \u001b[0m \u001b[91m                                                ~~~~\u001b[0m\n    \u001b[96msrc/tools/slackSearchMessages.ts\u001b[0m:\u001b[93m312\u001b[0m:\u001b[93m60\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS6133: \u001b[0m'result' is declared but its value is never read.\n\n    \u001b[7m312\u001b[0m   generateSearchRecommendations(analytics: any, args: any, result: any): string[] {\n    \u001b[7m   \u001b[0m \u001b[91m                                                           ~~~~~~\u001b[0m\n","name":"/home/ubuntu/mcp-slack-sdk/__tests__/registry/toolRegistry.test.ts","startTime":1755947552100,"status":"failed","summary":""},{"assertionResults":[{"ancestorTitles":["Slack Get Workspace Info Integration Tests","Integration Tests"],"duration":null,"failureDetails":[],"failureMessages":[],"fullName":"Slack Get Workspace Info Integration Tests Integration Tests should get workspace info successfully","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"pending","title":"should get workspace info successfully"},{"ancestorTitles":["Slack Get Workspace Info Integration Tests","Integration Tests"],"duration":null,"failureDetails":[],"failureMessages":[],"fullName":"Slack Get Workspace Info Integration Tests Integration Tests should include team details","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"pending","title":"should include team details"},{"ancestorTitles":["Slack Get Workspace Info Integration Tests","Error Handling"],"duration":null,"failureDetails":[],"failureMessages":[],"fullName":"Slack Get Workspace Info Integration Tests Error Handling should handle API errors gracefully","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"pending","title":"should handle API errors gracefully"}],"coverage":{},"endTime":1755947552100,"message":"","name":"/home/ubuntu/mcp-slack-sdk/__tests__/integration/slackGetWorkspaceInfo.integration.test.ts","startTime":1755947552100,"status":"skipped","summary":""},{"assertionResults":[{"ancestorTitles":["Slack Upload File Integration Tests","Validation Tests"],"duration":null,"failureDetails":[],"failureMessages":[],"fullName":"Slack Upload File Integration Tests Validation Tests should reject empty arguments","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"pending","title":"should reject empty arguments"},{"ancestorTitles":["Slack Upload File Integration Tests","Validation Tests"],"duration":null,"failureDetails":[],"failureMessages":[],"fullName":"Slack Upload File Integration Tests Validation Tests should reject empty channel","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"pending","title":"should reject empty channel"},{"ancestorTitles":["Slack Upload File Integration Tests","Validation Tests"],"duration":null,"failureDetails":[],"failureMessages":[],"fullName":"Slack Upload File Integration Tests Validation Tests should reject empty file path","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"pending","title":"should reject empty file path"},{"ancestorTitles":["Slack Upload File Integration Tests","Validation Tests"],"duration":null,"failureDetails":[],"failureMessages":[],"fullName":"Slack Upload File Integration Tests Validation Tests should reject non-existent file","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"pending","title":"should reject non-existent file"},{"ancestorTitles":["Slack Upload File Integration Tests","Integration Tests"],"duration":null,"failureDetails":[],"failureMessages":[],"fullName":"Slack Upload File Integration Tests Integration Tests should upload file successfully","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"pending","title":"should upload file successfully"},{"ancestorTitles":["Slack Upload File Integration Tests","Integration Tests"],"duration":null,"failureDetails":[],"failureMessages":[],"fullName":"Slack Upload File Integration Tests Integration Tests should upload file with comment","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"pending","title":"should upload file with comment"},{"ancestorTitles":["Slack Upload File Integration Tests","Integration Tests"],"duration":null,"failureDetails":[],"failureMessages":[],"fullName":"Slack Upload File Integration Tests Integration Tests should handle non-existent channel gracefully","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"pending","title":"should handle non-existent channel gracefully"},{"ancestorTitles":["Slack Upload File Integration Tests","Edge Cases"],"duration":null,"failureDetails":[],"failureMessages":[],"fullName":"Slack Upload File Integration Tests Edge Cases should handle file without title","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"pending","title":"should handle file without title"},{"ancestorTitles":["Slack Upload File Integration Tests","Edge Cases"],"duration":null,"failureDetails":[],"failureMessages":[],"fullName":"Slack Upload File Integration Tests Edge Cases should handle very long file title","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"pending","title":"should handle very long file title"},{"ancestorTitles":["Slack Upload File Integration Tests","Edge Cases"],"duration":null,"failureDetails":[],"failureMessages":[],"fullName":"Slack Upload File Integration Tests Edge Cases should handle special characters in title","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"pending","title":"should handle special characters in title"}],"coverage":{},"endTime":1755947552100,"message":"","name":"/home/ubuntu/mcp-slack-sdk/__tests__/integration/slackUploadFile.integration.test.ts","startTime":1755947552100,"status":"skipped","summary":""},{"assertionResults":[],"coverage":{},"endTime":1755947552100,"message":"  ● Test suite failed to run\n\n    \u001b[96msrc/tools/slackSearchMessages.ts\u001b[0m:\u001b[93m4\u001b[0m:\u001b[93m1\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS6192: \u001b[0mAll imports in import declaration are unused.\n\n    \u001b[7m4\u001b[0m import { Validator, ToolSchemas } from '@/utils/validator';\n    \u001b[7m \u001b[0m \u001b[91m~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n    \u001b[96msrc/tools/slackSearchMessages.ts\u001b[0m:\u001b[93m64\u001b[0m:\u001b[93m29\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2304: \u001b[0mCannot find name 'analyzeQuery'.\n\n    \u001b[7m64\u001b[0m             query_analysis: analyzeQuery(validatedArgs.query),\n    \u001b[7m  \u001b[0m \u001b[91m                            ~~~~~~~~~~~~\u001b[0m\n    \u001b[96msrc/tools/slackSearchMessages.ts\u001b[0m:\u001b[93m65\u001b[0m:\u001b[93m29\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2304: \u001b[0mCannot find name 'assessResultQuality'.\n\n    \u001b[7m65\u001b[0m             result_quality: assessResultQuality(result.messages),\n    \u001b[7m  \u001b[0m \u001b[91m                            ~~~~~~~~~~~~~~~~~~~\u001b[0m\n    \u001b[96msrc/tools/slackSearchMessages.ts\u001b[0m:\u001b[93m66\u001b[0m:\u001b[93m35\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2304: \u001b[0mCannot find name 'calculateSearchEffectiveness'.\n\n    \u001b[7m66\u001b[0m             search_effectiveness: calculateSearchEffectiveness(result),\n    \u001b[7m  \u001b[0m \u001b[91m                                  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n    \u001b[96msrc/tools/slackSearchMessages.ts\u001b[0m:\u001b[93m67\u001b[0m:\u001b[93m37\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2304: \u001b[0mCannot find name 'analyzeRelevanceDistribution'.\n\n    \u001b[7m67\u001b[0m             relevance_distribution: analyzeRelevanceDistribution(result.messages),\n    \u001b[7m  \u001b[0m \u001b[91m                                    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n    \u001b[96msrc/tools/slackSearchMessages.ts\u001b[0m:\u001b[93m70\u001b[0m:\u001b[93m31\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2304: \u001b[0mCannot find name 'analyzeResultDiversity'.\n\n    \u001b[7m70\u001b[0m             result_diversity: analyzeResultDiversity(result.messages),\n    \u001b[7m  \u001b[0m \u001b[91m                              ~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n    \u001b[96msrc/tools/slackSearchMessages.ts\u001b[0m:\u001b[93m71\u001b[0m:\u001b[93m36\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2304: \u001b[0mCannot find name 'analyzeTemporalDistribution'.\n\n    \u001b[7m71\u001b[0m             temporal_distribution: analyzeTemporalDistribution(result.messages),\n    \u001b[7m  \u001b[0m \u001b[91m                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n    \u001b[96msrc/tools/slackSearchMessages.ts\u001b[0m:\u001b[93m72\u001b[0m:\u001b[93m30\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2304: \u001b[0mCannot find name 'analyzeSourceDistribution'.\n\n    \u001b[7m72\u001b[0m             source_analysis: analyzeSourceDistribution(result.messages),\n    \u001b[7m  \u001b[0m \u001b[91m                             ~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n    \u001b[96msrc/tools/slackSearchMessages.ts\u001b[0m:\u001b[93m73\u001b[0m:\u001b[93m28\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2304: \u001b[0mCannot find name 'analyzeContentTypes'.\n\n    \u001b[7m73\u001b[0m             content_types: analyzeContentTypes(result.messages),\n    \u001b[7m  \u001b[0m \u001b[91m                           ~~~~~~~~~~~~~~~~~~~\u001b[0m\n    \u001b[96msrc/tools/slackSearchMessages.ts\u001b[0m:\u001b[93m76\u001b[0m:\u001b[93m32\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2304: \u001b[0mCannot find name 'generateQuerySuggestions'.\n\n    \u001b[7m76\u001b[0m             query_suggestions: generateQuerySuggestions(validatedArgs.query, result),\n    \u001b[7m  \u001b[0m \u001b[91m                               ~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n    \u001b[96msrc/tools/slackSearchMessages.ts\u001b[0m:\u001b[93m77\u001b[0m:\u001b[93m37\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2304: \u001b[0mCannot find name 'suggestFilters'.\n\n    \u001b[7m77\u001b[0m             filter_recommendations: suggestFilters(result.messages),\n    \u001b[7m  \u001b[0m \u001b[91m                                    ~~~~~~~~~~~~~~\u001b[0m\n    \u001b[96msrc/tools/slackSearchMessages.ts\u001b[0m:\u001b[93m78\u001b[0m:\u001b[93m32\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2304: \u001b[0mCannot find name 'suggestRefinements'.\n\n    \u001b[7m78\u001b[0m             search_refinement: suggestRefinements(validatedArgs.query, result),\n    \u001b[7m  \u001b[0m \u001b[91m                               ~~~~~~~~~~~~~~~~~~\u001b[0m\n    \u001b[96msrc/tools/slackSearchMessages.ts\u001b[0m:\u001b[93m82\u001b[0m:\u001b[93m27\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2304: \u001b[0mCannot find name 'generateSearchRecommendations'.\n\n    \u001b[7m82\u001b[0m         recommendations = generateSearchRecommendations(analytics, validatedArgs, result);\n    \u001b[7m  \u001b[0m \u001b[91m                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n    \u001b[96msrc/tools/slackSearchMessages.ts\u001b[0m:\u001b[93m122\u001b[0m:\u001b[93m22\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2304: \u001b[0mCannot find name 'inferSearchIntent'.\n\n    \u001b[7m122\u001b[0m       search_intent: inferSearchIntent(query),\n    \u001b[7m   \u001b[0m \u001b[91m                     ~~~~~~~~~~~~~~~~~\u001b[0m\n    \u001b[96msrc/tools/slackSearchMessages.ts\u001b[0m:\u001b[93m165\u001b[0m:\u001b[93m32\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 's' implicitly has an 'any' type.\n\n    \u001b[7m165\u001b[0m     const high = scores.filter(s => s > 0.7).length;\n    \u001b[7m   \u001b[0m \u001b[91m                               ~\u001b[0m\n    \u001b[96msrc/tools/slackSearchMessages.ts\u001b[0m:\u001b[93m166\u001b[0m:\u001b[93m34\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 's' implicitly has an 'any' type.\n\n    \u001b[7m166\u001b[0m     const medium = scores.filter(s => s > 0.4 && s <= 0.7).length;\n    \u001b[7m   \u001b[0m \u001b[91m                                 ~\u001b[0m\n    \u001b[96msrc/tools/slackSearchMessages.ts\u001b[0m:\u001b[93m167\u001b[0m:\u001b[93m31\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 's' implicitly has an 'any' type.\n\n    \u001b[7m167\u001b[0m     const low = scores.filter(s => s <= 0.4).length;\n    \u001b[7m   \u001b[0m \u001b[91m                              ~\u001b[0m\n    \u001b[96msrc/tools/slackSearchMessages.ts\u001b[0m:\u001b[93m220\u001b[0m:\u001b[93m7\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7053: \u001b[0mElement implicitly has an 'any' type because expression of type 'any' can't be used to index type '{}'.\n\n    \u001b[7m220\u001b[0m       channelCounts[channelName] = (channelCounts[channelName] || 0) + 1;\n    \u001b[7m   \u001b[0m \u001b[91m      ~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n    \u001b[96msrc/tools/slackSearchMessages.ts\u001b[0m:\u001b[93m220\u001b[0m:\u001b[93m37\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7053: \u001b[0mElement implicitly has an 'any' type because expression of type 'any' can't be used to index type '{}'.\n\n    \u001b[7m220\u001b[0m       channelCounts[channelName] = (channelCounts[channelName] || 0) + 1;\n    \u001b[7m   \u001b[0m \u001b[91m                                    ~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n    \u001b[96msrc/tools/slackSearchMessages.ts\u001b[0m:\u001b[93m297\u001b[0m:\u001b[93m22\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS6133: \u001b[0m'query' is declared but its value is never read.\n\n    \u001b[7m297\u001b[0m   suggestRefinements(query: string, result: any): string[] {\n    \u001b[7m   \u001b[0m \u001b[91m                     ~~~~~\u001b[0m\n    \u001b[96msrc/tools/slackSearchMessages.ts\u001b[0m:\u001b[93m312\u001b[0m:\u001b[93m49\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS6133: \u001b[0m'args' is declared but its value is never read.\n\n    \u001b[7m312\u001b[0m   generateSearchRecommendations(analytics: any, args: any, result: any): string[] {\n    \u001b[7m   \u001b[0m \u001b[91m                                                ~~~~\u001b[0m\n    \u001b[96msrc/tools/slackSearchMessages.ts\u001b[0m:\u001b[93m312\u001b[0m:\u001b[93m60\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS6133: \u001b[0m'result' is declared but its value is never read.\n\n    \u001b[7m312\u001b[0m   generateSearchRecommendations(analytics: any, args: any, result: any): string[] {\n    \u001b[7m   \u001b[0m \u001b[91m                                                           ~~~~~~\u001b[0m\n","name":"/home/ubuntu/mcp-slack-sdk/__tests__/integration/slackSearchMessages.integration.test.ts","startTime":1755947552100,"status":"failed","summary":""}],"wasInterrupted":false}
